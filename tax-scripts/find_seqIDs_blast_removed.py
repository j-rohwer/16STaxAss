"""
RRR 8-27-15

This script creates a list of all the seqIDs in your .fasta file.
Then it creates a list of all the seqIDs in your .blast.table file.
The script then identifies all seqIDs missing from the blast.table file and
appends them to the below-cutoff seqID file
generated by the R script find_seqIDs_with_pident.R

The format for typing into the terminal is:

$ python fetch_seqIDs_blast_removed.py fastafile blastfile outputfile

where 	fetch_seqIDs_blast_removed.py		path to this script
		fastafile							path to the fasta file containing all the seqIDs
		blastfile							path to the blast results in table format (col1 = seqID)				
		outputfile							path to the file with below-cutoff seqID file generated by the R script find_seqIDs_with_pident.R

Acknowledgements: I would like to sincerely thank Dr. Josh Hamilton for his invaluable aid
in troubleshooting this script.
"""

# Import required libraries

import os	# a library for manipulating files on your computer
import sys	# a library for reading arguments from the command line

# Read input arguments from command line into variable names

fastafile = sys.argv[1]
blastfile = sys.argv[2]
outputfile = sys.argv[3]

# Create hash of all SeqIDs in fasta file
allIDs = {}
with open(fastafile) as fasta:
    for line in fasta:
        if str.startswith(line, '>') :
            allIDs[line.strip()[1:]] = None

# Create List of all SeqIDs in blast output file
blastIDs = {}
with open(blastfile) as blast:
    for line in blast:
        blastIDs[line.split()[0]] = None

# Find seqIDs that are missing in blast and append them to the missing IDs output file
for key in allIDs:
    if key not in blastIDs:
        with open(outputfile,"a") as missing :
            missing.write(key + "\n")

# Close all the files you've opened

fasta.close()
blast.close()
missing.close()